services:
  ########################### Cluster Kafka Configuration in KRAFT mode ###########################
  kafka1:
    image: apache/kafka-native:latest
    hostname: kafka
    container_name: kafka1
    ports:
      - "9092:9092"
    environment:
      KAFKA_PROCESS_ROLES: controller,broker
      # CLUSTER_ID is generated thanks to `docker compose run kafka1 kafka-storage random-uuid`
      CLUSTER_ID: Zxn3rcGFQhqHnH-jDTrsqg
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_LISTENERS: INTERNAL://kafka:29092,EXTERNAL://0.0.0.0:9092,CONTROLLER://kafka:9093
      # INTERNAL is used by inter broker communication
      # EXTERNAL is used from local computer with localhost docker port binding
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:29092,EXTERNAL://localhost:9092
      KAFKA_NODE_ID: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG4J_ROOT_LOGLEVEL: INFO
      KAFKA_LOG4J_LOGGERS: 'org.kafka=INFO'
    networks:
      - kafka-platform

  kafka2:
    image: apache/kafka-native:latest
    hostname: kafka2
    container_name: kafka2
    ports:
      - "9292:9292"
    environment:
      KAFKA_PROCESS_ROLES: broker
      CLUSTER_ID: Zxn3rcGFQhqHnH-jDTrsqg
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_LISTENERS: INTERNAL://kafka2:29092,EXTERNAL://0.0.0.0:9292
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka2:29092,EXTERNAL://localhost:9292
      KAFKA_NODE_ID: 2
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG4J_ROOT_LOGLEVEL: INFO
      KAFKA_LOG4J_LOGGERS: 'org.kafka=INFO'
    networks:
      - kafka-platform

  kafka3:
    image: apache/kafka-native:latest
    hostname: kafka3
    container_name: kafka3
    ports:
      - "9392:9392"
    environment:
      KAFKA_PROCESS_ROLES: broker
      CLUSTER_ID: Zxn3rcGFQhqHnH-jDTrsqg
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_LISTENERS: INTERNAL://kafka3:29092,EXTERNAL://0.0.0.0:9392
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka3:29092,EXTERNAL://localhost:9392
      KAFKA_NODE_ID: 3
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
      KAFKA_LOG4J_ROOT_LOGLEVEL: INFO
      KAFKA_LOG4J_LOGGERS: 'org.kafka=INFO'
    networks:
      - kafka-platform

  ########################### Kafka UI Configuration ###########################
  kafbat-ui:
    image: ghcr.io/kafbat/kafka-ui:latest
    hostname: kafbat-ui
    container_name: kafbat-ui
    ports:
      - "8080:8080"
    depends_on:
      - kafka1
    environment:
      SPRING_CONFIG_ADDITIONAL-LOCATION: "/etc/kafkaui/kafkaui.yml"
    volumes:
      - ./config/kafkaui.yml:/etc/kafkaui/kafkaui.yml
    healthcheck:
      test: [ "CMD-SHELL", "curl kafbat-ui:8080/actuator/health" ]
      retries: 3
      timeout: 5s
    networks:
      - kafka-platform

  ########################### Connect Configuration ###########################
  connect:
    image: confluentinc/cp-kafka-connect:latest
    hostname: connect
    entrypoint:
      - /bin/bash
      - -c
      - CONNECT_REST_ADVERTISED_HOST_NAME=`hostname` /etc/confluent/docker/run
    healthcheck:
      test: [ "CMD-SHELL", "CONNECT_REST_ADVERTISED_HOST_NAME=`hostname` /etc/confluent/docker/healthcheck.sh" ]
    depends_on:
      - kafka1
    ports:
      - "8083:8083"
    environment:
      CONNECT_BOOTSTRAP_SERVERS: 'kafka:29092'
      CONNECT_REST_PORT: 8083
      CONNECT_LISTENERS: "HTTP://0.0.0.0:8083"
      CONNECT_GROUP_ID: custom_group_id
      CONNECT_CONFIG_STORAGE_TOPIC: _connect_configs
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_STORAGE_TOPIC: _connect_offset
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_TOPIC: _connect_status
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_CONNECTOR_CLIENT_CONFIG_OVERRIDE_POLICY: "All"
      CONNECT_TOPIC_CREATION_ENABLE: "false"
      CONNECT_LOG4J_ROOT_LOGLEVEL: "INFO"
      CONNECT_LOG4J_LOGGERS: 'org.kafka=INFO'
#    volumes:
#      - ./demo/filepulse/data:/data
    networks:
      - kafka-platform

  ########################### Schema Registry Configuration ###########################
  schema-registry:
    image: confluentinc/cp-schema-registry:latest
    hostname: schema-registry
    container_name: schema-registry
    depends_on:
      - kafka1
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:29092
      SCHEMA_REGISTRY_KAFKASTORE_SECURITY_PROTOCOL: PLAINTEXT
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_LISTENERS: http://schema-registry:8081
      SCHEMA_REGISTRY_SCHEMA_REGISTRY_INTER_INSTANCE_PROTOCOL: "http"
      SCHEMA_REGISTRY_LOG4J_ROOT_LOGLEVEL: INFO
      SCHEMA_REGISTRY_LOG4J_LOGGERS: 'org.kafka=INFO'
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://schema-registry:8081/subjects" ]
      retries: 3
      timeout: 5s
    networks:
      - kafka-platform

  ########################### Postgres Configuration ###########################
  postgres:
    image: postgres:latest
    hostname: postgres
    container_name: postgres
    environment:
      - POSTGRES_DB=streaming
      - POSTGRES_USER=streaming
      - POSTGRES_PASSWORD=streaming_pwd
    command:
      - "postgres"
      - "-c"
      - "wal_level=logical"
    ports:
      - "5432:5432"
    networks:
      - kafka-platform

  ########################## S3 Configuration ###########################
  minio:
    image: minio/minio:latest
    hostname: minio
    container_name: minio
    ports:
      - '9000:9000'
      - '8900:8900'
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: password
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: password
      MINIO_BUCKET: my-bucket
    command: 'minio server /data/minio --console-address ":8900"'
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9000/minio/health/live"]
      retries: 3
      timeout: 5s
    networks:
      - kafka-platform

networks:
  kafka-platform:
    driver: bridge
