{
  "connector.class": "org.apache.kafka.connect.mirror.MirrorSourceConnector",

  "topics": "local.dkt-member.streaming.public.demo-mm2.member-event.v1.avro",

  "clusters": "source-streaming,target-streaming",
  "source.cluster.alias": "source-streaming",
  "source.cluster.bootstrap.servers": "kafka:29092",
  "target.cluster.alias": "target-streaming",

  "target.cluster.bootstrap.servers": "kafka:29092",
  "offset-syncs.topic.location": "target",
  "offset-syncs.topic.replication.factor": 1,
  "sync.topic.configs.enabled": false,
  "sync.topic.acls.enabled": false,
  "refresh.topics.enabled": false,

  "forwarding.admin.class": "com.decathlon.member.streaming.kafka.connect.mirror.CustomForwardingAdmin",

  "transforms": "RenameTopicBefore,ResetPartitionNumber,CloudEvents,SerdesTransformation,RenameTopicAfter",

  "transforms.RenameTopicBefore.type": "org.apache.kafka.connect.transforms.RegexRouter",
  "transforms.RenameTopicBefore.regex": "source-streaming.local.dkt-member.streaming.public.demo-mm2.member-event.v1.avro",
  "transforms.RenameTopicBefore.replacement": "local.dkt-member.streaming.public.demo-mm2.member-event.v1.avro",

  "transforms.ResetPartitionNumber.type": "com.decathlon.kafka.connect.transforms.ResetPartitionNumberTransformation",

  "transforms.CloudEvents.type": "com.decathlon.kafka.connect.transforms.cloudevents.CloudEventsBinaryContentMode",
  "transforms.CloudEvents.cloudevents.attribute.subject.enabled": true,
  "transforms.CloudEvents.cloudevents.attribute.subject.strategy.type": "com.decathlon.streaming.kafka.cloudevents.strategy.StaticValueStrategy",
  "transforms.CloudEvents.cloudevents.attribute.subject.strategy.value": "static_subject",
  "transforms.CloudEvents.cloudevents.attribute.id.enabled": true,
  "transforms.CloudEvents.cloudevents.attribute.id.strategy.type": "com.decathlon.streaming.kafka.cloudevents.strategy.StaticValueStrategy",
  "transforms.CloudEvents.cloudevents.attribute.id.strategy.value": "static_subject",
  "transforms.CloudEvents.cloudevents.attribute.content-type.enabled": true,
  "transforms.CloudEvents.cloudevents.attribute.content-type.strategy.type": "com.decathlon.streaming.kafka.cloudevents.strategy.StaticValueStrategy",
  "transforms.CloudEvents.cloudevents.attribute.content-type.strategy.value": "static_subject",
  "transforms.CloudEvents.cloudevents.attribute.source.enabled": true,
  "transforms.CloudEvents.cloudevents.attribute.source.strategy.type": "com.decathlon.streaming.kafka.cloudevents.strategy.StaticValueStrategy",
  "transforms.CloudEvents.cloudevents.attribute.source.strategy.value": "static_subject",
  "transforms.CloudEvents.cloudevents.attribute.type.enabled": true,
  "transforms.CloudEvents.cloudevents.attribute.type.strategy.type": "com.decathlon.streaming.kafka.cloudevents.strategy.StaticValueStrategy",
  "transforms.CloudEvents.cloudevents.attribute.type.strategy.value": "static_subject",

  "transforms.SerdesTransformation.type": "com.decathlon.kafka.connect.transforms.SerdesTransformation$Value",
  "transforms.SerdesTransformation.deserializer": "com.decathlon.kafka.crypto.serdes.KafkaCryptoDeserializer",
  "transforms.SerdesTransformation.deserializer.tink.keyset.json.string": "##TINK_KEYSET_JSON##",
  "transforms.SerdesTransformation.deserializer.crypto.value.serdes.delegate.deserializer": "io.confluent.kafka.serializers.KafkaAvroDeserializer",
  "transforms.SerdesTransformation.deserializer.schema.registry.url": "http://schema-registry:8081",
  "transforms.SerdesTransformation.deserializer.auto.register.schemas": false,
  "transforms.SerdesTransformation.serializer": "io.confluent.kafka.serializers.KafkaAvroSerializer",
  "transforms.SerdesTransformation.serializer.schema.registry.url": "http://schema-registry:8081",
  "transforms.SerdesTransformation.serializer.auto.register.schemas": false,

  "transforms.RenameTopicAfter.type": "org.apache.kafka.connect.transforms.RegexRouter",
  "transforms.RenameTopicAfter.regex": "local.dkt-member.streaming.public.demo-mm2.member-event.v1.avro",
  "transforms.RenameTopicAfter.replacement": "source-streaming.local.dkt-member.streaming.public.demo-mm2.member-event.v1.avro",

  "key.converter": "com.decathlon.kafka.crypto.serdes.KafkaHashedKeyConverter",

  "value.converter": "com.decathlon.kafka.crypto.serdes.KafkaCryptoConverter",
  "value.converter.crypto.serdes.delegate.converter": "org.apache.kafka.connect.converters.ByteArrayConverter",
  "value.converter.crypto.serdes.tink.keyset.json.string": "##TINK_KEYSET_JSON##"
}
