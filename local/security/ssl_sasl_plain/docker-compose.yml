---
services:

  controller1:
    image: confluentinc/cp-server:${CP_VERSION}
    hostname: controller1
    container_name: controller1
    volumes:
      - ./../certificates:/certificates/
    environment:
      KAFKA_PROCESS_ROLES: 'controller'
      CLUSTER_ID: ${CLUSTER_ID}
      KAFKA_NODE_ID: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@controller1:19093,2@controller2:19093,3@controller3:19093'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:SASL_SSL'
      KAFKA_LISTENERS: 'CONTROLLER://controller1:19093'
      KAFKA_LOG4J_ROOT_LOGLEVEL: 'INFO'
#      KAFKA_LOG4J_LOGGERS: 'io.confluent=INFO,org.apache.kafka=WARN,kafka=WARN'
      # SSL SECURITY
      KAFKA_SSL_KEYSTORE_LOCATION: /certificates/kafka.controller1.keystore.jks
      KAFKA_SSL_KEYSTORE_PASSWORD: confluent
      KAFKA_SSL_KEY_PASSWORD: confluent
      KAFKA_SSL_TRUSTSTORE_LOCATION: /certificates/kafka.controller1.truststore.jks
      KAFKA_SSL_TRUSTSTORE_PASSWORD: confluent

      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
      KAFKA_SASL_MECHANISM_CONTROLLER_PROTOCOL: PLAIN
      KAFKA_LISTENER_NAME_CONTROLLER_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_LISTENER_NAME_CONTROLLER_PLAIN_SASL_JAAS_CONFIG: |
        org.apache.kafka.common.security.plain.PlainLoginModule required \
        username="admin" \
        password="admin-secret" \
        user_admin="admin-secret";

  controller2:
    image: confluentinc/cp-server:${CP_VERSION}
    hostname: controller2
    container_name: controller2
    volumes:
      - ./../certificates:/certificates/
    environment:
      KAFKA_PROCESS_ROLES: 'controller'
      CLUSTER_ID: ${CLUSTER_ID}
      KAFKA_NODE_ID: 2
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@controller1:19093,2@controller2:19093,3@controller3:19093'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:SASL_SSL'
      KAFKA_LISTENERS: 'CONTROLLER://controller2:19093'
      KAFKA_LOG4J_ROOT_LOGLEVEL: 'INFO'
#      KAFKA_LOG4J_LOGGERS: 'io.confluent=INFO,org.apache.kafka=WARN,kafka=WARN'
      # SSL SECURITY
      KAFKA_SSL_KEYSTORE_LOCATION: /certificates/kafka.controller2.keystore.jks
      KAFKA_SSL_KEYSTORE_PASSWORD: confluent
      KAFKA_SSL_KEY_PASSWORD: confluent
      KAFKA_SSL_TRUSTSTORE_LOCATION: /certificates/kafka.controller2.truststore.jks
      KAFKA_SSL_TRUSTSTORE_PASSWORD: confluent

      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
      KAFKA_SASL_MECHANISM_CONTROLLER_PROTOCOL: PLAIN
      KAFKA_LISTENER_NAME_CONTROLLER_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_LISTENER_NAME_CONTROLLER_PLAIN_SASL_JAAS_CONFIG: |
        org.apache.kafka.common.security.plain.PlainLoginModule required \
        username="admin" \
        password="admin-secret" \
        user_admin="admin-secret";

  controller3:
    image: confluentinc/cp-server:${CP_VERSION}
    hostname: controller3
    container_name: controller3
    volumes:
      - ./../certificates:/certificates/
    environment:
      KAFKA_PROCESS_ROLES: 'controller'
      CLUSTER_ID: ${CLUSTER_ID}
      KAFKA_NODE_ID: 3
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@controller1:19093,2@controller2:19093,3@controller3:19093'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:SASL_SSL'
      KAFKA_LISTENERS: 'CONTROLLER://controller3:19093'
      KAFKA_LOG4J_ROOT_LOGLEVEL: 'INFO'
#      KAFKA_LOG4J_LOGGERS: 'io.confluent=INFO,org.apache.kafka=WARN,kafka=WARN'
      # SSL SECURITY
      KAFKA_SSL_KEYSTORE_LOCATION: /certificates/kafka.controller3.keystore.jks
      KAFKA_SSL_KEYSTORE_PASSWORD: confluent
      KAFKA_SSL_KEY_PASSWORD: confluent
      KAFKA_SSL_TRUSTSTORE_LOCATION: /certificates/kafka.controller3.truststore.jks
      KAFKA_SSL_TRUSTSTORE_PASSWORD: confluent

      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
      KAFKA_SASL_MECHANISM_CONTROLLER_PROTOCOL: PLAIN
      KAFKA_LISTENER_NAME_CONTROLLER_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_LISTENER_NAME_CONTROLLER_PLAIN_SASL_JAAS_CONFIG: |
        org.apache.kafka.common.security.plain.PlainLoginModule required \
        username="admin" \
        password="admin-secret" \
        user_admin="admin-secret";

  broker1:
    image: confluentinc/cp-server:${CP_VERSION}
    hostname: broker1
    container_name: broker1
    depends_on:
      - controller1
      - controller2
      - controller3
    ports:
      - "9092:9092"
    volumes:
      - ./../certificates:/certificates/
    environment:
      KAFKA_PROCESS_ROLES: 'broker'
      CLUSTER_ID: ${CLUSTER_ID}
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@controller1:19093,2@controller2:19093,3@controller3:19093'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:SASL_SSL,INTERNAL:SASL_SSL,EXTERNAL:SASL_SSL'
      KAFKA_LISTENERS: 'INTERNAL://broker1:19092,EXTERNAL://0.0.0.0:9092'
      KAFKA_ADVERTISED_LISTENERS: 'INTERNAL://broker1:19092,EXTERNAL://localhost:9092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'INTERNAL'
      KAFKA_NODE_ID: 11
      KAFKA_LOG4J_ROOT_LOGLEVEL: 'INFO'
#      KAFKA_LOG4J_LOGGERS: 'io.confluent=INFO,org.apache.kafka=WARN,kafka=WARN'
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 3
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 3
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      # SSL SECURITY
      KAFKA_SSL_KEYSTORE_LOCATION: /certificates/kafka.broker1.keystore.jks
      KAFKA_SSL_KEYSTORE_PASSWORD: confluent
      KAFKA_SSL_KEY_PASSWORD: confluent
      KAFKA_SSL_TRUSTSTORE_LOCATION: /certificates/kafka.broker1.truststore.jks
      KAFKA_SSL_TRUSTSTORE_PASSWORD: confluent

      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
      KAFKA_SASL_MECHANISM_CONTROLLER_PROTOCOL: PLAIN
      KAFKA_LISTENER_NAME_CONTROLLER_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_LISTENER_NAME_CONTROLLER_PLAIN_SASL_JAAS_CONFIG: |
        org.apache.kafka.common.security.plain.PlainLoginModule required \
        username="admin" \
        password="admin-secret" \
        user_admin="admin-secret";
      KAFKA_SASL_MECHANISM_INTERNAL_PROTOCOL: PLAIN
      KAFKA_LISTENER_NAME_INTERNAL_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_LISTENER_NAME_INTERNAL_PLAIN_SASL_JAAS_CONFIG: |
        org.apache.kafka.common.security.plain.PlainLoginModule required \
        username="admin" \
        password="admin-secret" \
        user_admin="admin-secret" \
        user_alice="alice-secret" \
        user_bob="bob-secret";
      KAFKA_SASL_MECHANISM_EXTERNAL_PROTOCOL: PLAIN
      KAFKA_LISTENER_NAME_EXTERNAL_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_LISTENER_NAME_EXTERNAL_PLAIN_SASL_JAAS_CONFIG: |
        org.apache.kafka.common.security.plain.PlainLoginModule required \
        username="admin" \
        password="admin-secret" \
        user_admin="admin-secret" \
        user_alice="alice-secret" \
        user_bob="bob-secret";

  broker2:
    image: confluentinc/cp-server:${CP_VERSION}
    hostname: broker2
    container_name: broker2
    depends_on:
      - controller1
      - controller2
      - controller3
    ports:
      - "9292:9092"
    volumes:
      - ./../certificates:/certificates/
    environment:
      KAFKA_PROCESS_ROLES: 'broker'
      CLUSTER_ID: ${CLUSTER_ID}
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@controller1:19093,2@controller2:19093,3@controller3:19093'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:SASL_SSL,INTERNAL:SASL_SSL,EXTERNAL:SASL_SSL'
      KAFKA_LISTENERS: 'INTERNAL://broker2:19092,EXTERNAL://0.0.0.0:9092'
      KAFKA_ADVERTISED_LISTENERS: 'INTERNAL://broker2:19092,EXTERNAL://localhost:9292'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'INTERNAL'
      KAFKA_NODE_ID: 12
      KAFKA_LOG4J_ROOT_LOGLEVEL: 'INFO'
#      KAFKA_LOG4J_LOGGERS: 'io.confluent=INFO,org.apache.kafka=WARN,kafka=WARN'
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 3
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 3
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      # SSL SECURITY
      KAFKA_SSL_KEYSTORE_LOCATION: /certificates/kafka.broker2.keystore.jks
      KAFKA_SSL_KEYSTORE_PASSWORD: confluent
      KAFKA_SSL_KEY_PASSWORD: confluent
      KAFKA_SSL_TRUSTSTORE_LOCATION: /certificates/kafka.broker2.truststore.jks
      KAFKA_SSL_TRUSTSTORE_PASSWORD: confluent

      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
      KAFKA_SASL_MECHANISM_CONTROLLER_PROTOCOL: PLAIN
      KAFKA_LISTENER_NAME_CONTROLLER_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_LISTENER_NAME_CONTROLLER_PLAIN_SASL_JAAS_CONFIG: |
        org.apache.kafka.common.security.plain.PlainLoginModule required \
        username="admin" \
        password="admin-secret" \
        user_admin="admin-secret";
      KAFKA_SASL_MECHANISM_INTERNAL_PROTOCOL: PLAIN
      KAFKA_LISTENER_NAME_INTERNAL_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_LISTENER_NAME_INTERNAL_PLAIN_SASL_JAAS_CONFIG: |
        org.apache.kafka.common.security.plain.PlainLoginModule required \
        username="admin" \
        password="admin-secret" \
        user_admin="admin-secret" \
        user_alice="alice-secret" \
        user_bob="bob-secret";
      KAFKA_SASL_MECHANISM_EXTERNAL_PROTOCOL: PLAIN
      KAFKA_LISTENER_NAME_EXTERNAL_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_LISTENER_NAME_EXTERNAL_PLAIN_SASL_JAAS_CONFIG: |
        org.apache.kafka.common.security.plain.PlainLoginModule required \
        username="admin" \
        password="admin-secret" \
        user_admin="admin-secret" \
        user_alice="alice-secret" \
        user_bob="bob-secret";

  broker3:
    image: confluentinc/cp-server:${CP_VERSION}
    hostname: broker3
    container_name: broker3
    depends_on:
      - controller1
      - controller2
      - controller3
    ports:
      - "9392:9092"
    volumes:
      - ./../certificates:/certificates/
    environment:
      KAFKA_PROCESS_ROLES: 'broker'
      CLUSTER_ID: ${CLUSTER_ID}
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@controller1:19093,2@controller2:19093,3@controller3:19093'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:SASL_SSL,INTERNAL:SASL_SSL,EXTERNAL:SASL_SSL'
      KAFKA_LISTENERS: 'INTERNAL://broker3:19092,EXTERNAL://0.0.0.0:9092'
      KAFKA_ADVERTISED_LISTENERS: 'INTERNAL://broker3:19092,EXTERNAL://localhost:9392'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'INTERNAL'
      KAFKA_NODE_ID: 13
      KAFKA_LOG4J_ROOT_LOGLEVEL: 'INFO'
#      KAFKA_LOG4J_LOGGERS: 'io.confluent=INFO,org.apache.kafka=WARN,kafka=WARN'
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 3
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 3
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      # SSL SECURITY
      KAFKA_SSL_KEYSTORE_LOCATION: /certificates/kafka.broker3.keystore.jks
      KAFKA_SSL_KEYSTORE_PASSWORD: confluent
      KAFKA_SSL_KEY_PASSWORD: confluent
      KAFKA_SSL_TRUSTSTORE_LOCATION: /certificates/kafka.broker3.truststore.jks
      KAFKA_SSL_TRUSTSTORE_PASSWORD: confluent

      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
      KAFKA_SASL_MECHANISM_CONTROLLER_PROTOCOL: PLAIN
      KAFKA_LISTENER_NAME_CONTROLLER_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_LISTENER_NAME_CONTROLLER_PLAIN_SASL_JAAS_CONFIG: |
        org.apache.kafka.common.security.plain.PlainLoginModule required \
        username="admin" \
        password="admin-secret" \
        user_admin="admin-secret";
      KAFKA_SASL_MECHANISM_INTERNAL_PROTOCOL: PLAIN
      KAFKA_LISTENER_NAME_INTERNAL_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_LISTENER_NAME_INTERNAL_PLAIN_SASL_JAAS_CONFIG: |
        org.apache.kafka.common.security.plain.PlainLoginModule required \
        username="admin" \
        password="admin-secret" \
        user_admin="admin-secret" \
        user_alice="alice-secret" \
        user_bob="bob-secret";
      KAFKA_SASL_MECHANISM_EXTERNAL_PROTOCOL: PLAIN
      KAFKA_LISTENER_NAME_EXTERNAL_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_LISTENER_NAME_EXTERNAL_PLAIN_SASL_JAAS_CONFIG: |
        org.apache.kafka.common.security.plain.PlainLoginModule required \
        username="admin" \
        password="admin-secret" \
        user_admin="admin-secret" \
        user_alice="alice-secret" \
        user_bob="bob-secret";

  schema-registry:
    image: confluentinc/cp-schema-registry:${CP_VERSION}
    hostname: schema-registry
    container_name: schema-registry
    depends_on:
      - broker1
      - broker2
      - broker3
    ports:
      - "8081:8081"
    volumes:
      - ./../certificates:/certificates/
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'broker1:19092,broker2:19092,broker3:19092'
      SCHEMA_REGISTRY_LISTENERS: https://0.0.0.0:8081
      SCHEMA_REGISTRY_INTER_INSTANCE_PROTOCOL: https
      SCHEMA_REGISTRY_LOG4J_ROOT_LOGLEVEL: 'WARN'
      SCHEMA_REGISTRY_LOG4J_LOGGERS: 'io.confluent=INFO,org.apache.kafka=WARN,kafka=WARN'
      # SSL SECURITY
      SCHEMA_REGISTRY_KAFKASTORE_SECURITY_PROTOCOL: SASL_SSL
      SCHEMA_REGISTRY_KAFKASTORE_SSL_TRUSTSTORE_LOCATION: /certificates/kafka.schema-registry.truststore.jks
      SCHEMA_REGISTRY_KAFKASTORE_SSL_TRUSTSTORE_PASSWORD: confluent
      SCHEMA_REGISTRY_KAFKASTORE_SASL_MECHANISM: PLAIN
      SCHEMA_REGISTRY_KAFKASTORE_SASL_JAAS_CONFIG: |
        org.apache.kafka.common.security.plain.PlainLoginModule required \
        username="alice" \
        password="alice-secret";
      SCHEMA_REGISTRY_SSL_CLIENT_AUTH: true
      SCHEMA_REGISTRY_SSL_CLIENT_AUTHENTICATION: 'REQUIRED'
      SCHEMA_REGISTRY_SSL_TRUSTSTORE_LOCATION: /certificates/kafka.schema-registry.truststore.jks
      SCHEMA_REGISTRY_SSL_TRUSTSTORE_PASSWORD: confluent
      SCHEMA_REGISTRY_SSL_KEYSTORE_LOCATION: /certificates/kafka.schema-registry.keystore.jks
      SCHEMA_REGISTRY_SSL_KEYSTORE_PASSWORD: confluent
      SCHEMA_REGISTRY_SSL_KEY_PASSWORD: confluent


  connect:
#    image: confluentinc/cp-server-connect:${CP_VERSION}
    image: confluentinc/cp-server-connect:7.7.2
    hostname: connect
    container_name: connect
    depends_on:
      - broker1
      - broker2
      - broker3
      - schema-registry
    ports:
      - "8083:8083"
    volumes:
      - ./../certificates:/certificates/
    environment:
      CONNECT_BOOTSTRAP_SERVERS: 'broker1:19092,broker2:19092,broker3:19092'
      CONNECT_LISTENERS: http://0.0.0.0:8083
      CONNECT_REST_ADVERTISED_HOST_NAME: connect
      CONNECT_GROUP_ID: connect
      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 3
      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 3
      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 3
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: https://schema-registry:8081
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_SSL_TRUSTSTORE_LOCATION: /certificates/kafka.schema-registry.truststore.jks
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_SSL_TRUSTSTORE_PASSWORD: confluent
      CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components"
      CONNECT_LOG4J_ROOT_LOGLEVEL: 'INFO'
#      CONNECT_LOG4J_LOGGERS: 'io.confluent=INFO,org.apache.kafka=WARN,kafka=WARN'
      # SSL SECURITY
      CONNECT_SECURITY_PROTOCOL: SASL_SSL
      CONNECT_SSL_TRUSTSTORE_LOCATION: /certificates/kafka.connect.truststore.jks
      CONNECT_SSL_TRUSTSTORE_PASSWORD: confluent
      CONNECT_SASL_MECHANISM: PLAIN
      CONNECT_SASL_JAAS_CONFIG: |
        org.apache.kafka.common.security.plain.PlainLoginModule required \
        username="alice" \
        password="alice-secret";
#      CONNECT_SSL_CLIENT_AUTH: 'required'

##  control-center:
##    image: confluentinc/cp-enterprise-control-center:${CP_VERSION}
##    hostname: control-center
##    container_name: control-center
##    depends_on:
##      - broker1
##      - broker2
##      - broker3
##      - schema-registry
##      - connect
##    ports:
##      - "9021:9021"
##    volumes:
##      - ./../certificates:/certificates/
##    environment:
##      CONTROL_CENTER_BOOTSTRAP_SERVERS: 'broker1:19092,broker2:19092,broker3:19092'
##      CONTROL_CENTER_CONNECT_CONNECT-DEFAULT_CLUSTER: 'connect:8083'
##      CONTROL_CENTER_CONNECT_HEALTHCHECK_ENDPOINT: '/connectors'
##      CONTROL_CENTER_SCHEMA_REGISTRY_URL: "https://schema-registry:8081"
##      CONTROL_CENTER_SCHEMA_REGISTRY_SCHEMA_REGISTRY_SSL_TRUSTSTORE_LOCATION: /certificates/kafka.schema-registry.truststore.jks
##      CONTROL_CENTER_SCHEMA_REGISTRY_SCHEMA_REGISTRY_SSL_TRUSTSTORE_PASSWORD: confluent
##      CONTROL_CENTER_REPLICATION_FACTOR: 3
##      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 3
##      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 3
##      CONFLUENT_METRICS_TOPIC_REPLICATION: 3
##      PORT: 9021
##      # SSL SECURITY
##      CONTROL_CENTER_STREAMS_SECURITY_PROTOCOL: SSL
##      CONTROL_CENTER_STREAMS_SSL_TRUSTSTORE_LOCATION: /certificates/kafka.control-center.truststore.jks
##      CONTROL_CENTER_STREAMS_SSL_TRUSTSTORE_PASSWORD: confluent
##
##  rest-proxy:
##    image: confluentinc/cp-kafka-rest:${CP_VERSION}
##    hostname: rest-proxy
##    container_name: rest-proxy
##    depends_on:
##      - broker1
##      - broker2
##      - broker3
##      - schema-registry
##    ports:
##      - "8082:8082"
##    volumes:
##      - ./../certificates:/certificates/
##    environment:
##      KAFKA_REST_HOST_NAME: rest-proxy
##      KAFKA_REST_BOOTSTRAP_SERVERS: 'broker1:19092,broker2:19092,broker3:19092'
##      KAFKA_REST_LISTENERS: "http://0.0.0.0:8082"
##      KAFKA_REST_SCHEMA_REGISTRY_URL: 'https://schema-registry:8081'
##      KAFKA_REST_SCHEMA_REGISTRY_SSL_TRUSTSTORE_LOCATION: /certificates/kafka.schema-registry.truststore.jks
##      KAFKA_REST_SCHEMA_REGISTRY_SSL_TRUSTSTORE_PASSWORD: confluent
##      # SSL SECURITY
##      KAFKA_REST_CLIENT_SECURITY_PROTOCOL: SSL
##      KAFKA_REST_CLIENT_SSL_TRUSTSTORE_LOCATION: /certificates/kafka.rest-proxy.truststore.jks
##      KAFKA_REST_CLIENT_SSL_TRUSTSTORE_PASSWORD: confluent

  akhq:
    image: tchiotludo/akhq:latest
    hostname: akhq
    container_name: akhq
    ports:
      - "8080:8080"
    volumes:
      - ./../certificates:/certificates/
    environment:
      AKHQ_CONFIGURATION: |
        akhq:
          connections:
            docker-kafka-server:
              properties:
                bootstrap.servers: "broker1:19092,broker2:19092,broker3:19092"
                security.protocol: SASL_SSL
                ssl.truststore.location: /certificates/kafka.akhq.truststore.jks
                ssl.truststore.password: confluent
                sasl.mechanism: PLAIN
                sasl.jaas.config: org.apache.kafka.common.security.plain.PlainLoginModule required username="alice" password="alice-secret";
              schema-registry:
                url: "https://schema-registry:8081"
                properties:
                  schema.registry.ssl.truststore.location: /certificates/kafka.akhq.truststore.jks
                  schema.registry.ssl.truststore.password: confluent
                  schema.registry.ssl.keystore.location: /certificates/kafka.akhq.keystore.jks
                  schema.registry.ssl.keystore.password: confluent
                  schema.registry.ssl.key.password: confluent
              connect:
                - name: "connect"
                  url: "http://connect:8083"
                  properties:
                    connect.ssl.truststore.location: /certificates/kafka.akhq.truststore.jks
                    connect.ssl.truststore.password: confluent
                    connect.ssl.keystore.location: /certificates/kafka.akhq.keystore.jks
                    connect.ssl.keystore.password: confluent
                    connect.ssl.key.password: confluent